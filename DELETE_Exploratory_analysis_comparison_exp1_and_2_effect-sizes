# -----------------------------------------------------------------------------------
# This script explores differences between Experiment 1 and Experiment 2 
# without inferential statistics, focusing on effect sizes and confidence intervals.
# -----------------------------------------------------------------------------------

# -----------------------------------------------------------------------------------
# Exploratory Analysis: Main Effects & Interaction Effects Across Experiments
# -----------------------------------------------------------------------------------

# Load required libraries
library(dplyr)
library(readr)
library(effsize)
library(effectsize)
library(epitools)

# Clear the workspace
rm(list = ls())

# Set the working directory 
setwd("")

# Load datasets
experiment1 <- read_csv("factorial_regression_input_3.csv")
experiment2 <- read_csv("factorial_regression_input_4.csv")

# Add experiment identifier
experiment1 <- experiment1 %>% mutate(experiment = "1")
experiment2 <- experiment2 %>% mutate(experiment = "2")

# Combine datasets
combined_data <- bind_rows(experiment1, experiment2)

# Recode binary responses (1 = "yes", 0 = "no")
combined_data$binary_question_key_resp.keys <- ifelse(
  combined_data$binary_question_key_resp.keys == "left", 1,
  ifelse(combined_data$binary_question_key_resp.keys == "right", 0, NA)
)

# Convert response types to appropriate formats
combined_data <- combined_data %>%
  mutate(
    correlation = factor(correlation, levels = c("high", "low")),
    interaction = factor(interaction, levels = c("present", "absent")),
    experiment = factor(experiment, levels = c("1", "2")),
    ParticipantID = as.factor(ParticipantID),
    sync_exp_interaction = interaction(correlation, experiment, sep = "_"),
    motion_exp_interaction = interaction(interaction, experiment, sep = "_"),
    sync_motion_exp_interaction = interaction(correlation, interaction, experiment, sep = "_")
  )

# Save cleaned dataset
write.csv(combined_data, "combined_exploratory_data.csv", row.names = FALSE)

# -----------------------------------------------------------------------------------
# Compute Effect Sizes for Yes Responses (Binary)
# -----------------------------------------------------------------------------------

# Compute Odds Ratios for Experiment Effect
odds_experiment <- compute_odds_ratio(combined_data, "experiment")

# Compute Odds Ratios for Synchrony × Experiment Interaction
odds_sync_exp <- compute_odds_ratio(combined_data, "sync_exp_interaction")

# Compute Odds Ratios for Directed Motion × Experiment Interaction
odds_motion_exp <- compute_odds_ratio(combined_data, "motion_exp_interaction")

# Compute Odds Ratios for Three-Way Interaction (Synchrony × Motion × Experiment)
odds_sync_motion_exp <- compute_odds_ratio(combined_data, "sync_motion_exp_interaction")

# -----------------------------------------------------------------------------------
# Compute Effect Sizes for Response Times (Continuous)
# -----------------------------------------------------------------------------------

# Compute Cohen’s d for Experiment Effect
cohen_d_experiment <- compute_cohens_d(
  combined_data %>% filter(experiment == "1") %>% pull(binary_question_key_resp.rt) %>% na.omit(),
  combined_data %>% filter(experiment == "2") %>% pull(binary_question_key_resp.rt) %>% na.omit()
)

# Compute Cohen’s d for Synchrony × Experiment Interaction
cohen_d_sync_exp <- compute_cohens_d(
  combined_data %>% filter(sync_exp_interaction == "high_1") %>% pull(binary_question_key_resp.rt) %>% na.omit(),
  combined_data %>% filter(sync_exp_interaction == "low_1") %>% pull(binary_question_key_resp.rt) %>% na.omit()
)

# Compute Cohen’s d for Directed Motion × Experiment Interaction
cohen_d_motion_exp <- compute_cohens_d(
  combined_data %>% filter(motion_exp_interaction == "present_1") %>% pull(binary_question_key_resp.rt) %>% na.omit(),
  combined_data %>% filter(motion_exp_interaction == "absent_1") %>% pull(binary_question_key_resp.rt) %>% na.omit()
)

# Compute Cohen’s d for Three-Way Interaction (Synchrony × Motion × Experiment)
cohen_d_sync_motion_exp <- compute_cohens_d(
  combined_data %>% filter(sync_motion_exp_interaction == "high_present_1") %>% pull(binary_question_key_resp.rt) %>% na.omit(),
  combined_data %>% filter(sync_motion_exp_interaction == "low_absent_2") %>% pull(binary_question_key_resp.rt) %>% na.omit()
)

# -----------------------------------------------------------------------------------
# Compute Effect Sizes for Confidence Ratings (Ordinal)
# -----------------------------------------------------------------------------------

# Compute Cliff’s Delta for Experiment Effect
cliffs_delta_experiment <- compute_cliffs_delta(
  combined_data %>% filter(experiment == "1") %>% pull(slider_confidence.response) %>% na.omit(),
  combined_data %>% filter(experiment == "2") %>% pull(slider_confidence.response) %>% na.omit()
)

# Compute Cliff’s Delta for Synchrony × Experiment Interaction
cliffs_delta_sync_exp <- compute_cliffs_delta(
  combined_data %>% filter(sync_exp_interaction == "high_1") %>% pull(slider_confidence.response) %>% na.omit(),
  combined_data %>% filter(sync_exp_interaction == "low_1") %>% pull(slider_confidence.response) %>% na.omit()
)

# Compute Cliff’s Delta for Directed Motion × Experiment Interaction
cliffs_delta_motion_exp <- compute_cliffs_delta(
  combined_data %>% filter(motion_exp_interaction == "present_1") %>% pull(slider_confidence.response) %>% na.omit(),
  combined_data %>% filter(motion_exp_interaction == "absent_1") %>% pull(slider_confidence.response) %>% na.omit()
)

# Compute Cliff’s Delta for Three-Way Interaction (Synchrony × Motion × Experiment)
cliffs_delta_sync_motion_exp <- compute_cliffs_delta(
  combined_data %>% filter(sync_motion_exp_interaction == "high_present_1") %>% pull(slider_confidence.response) %>% na.omit(),
  combined_data %>% filter(sync_motion_exp_interaction == "low_absent_2") %>% pull(slider_confidence.response) %>% na.omit()
)

# Print results
print(paste("Odds Ratio for Experiment Effect:", odds_experiment))
print(paste("Odds Ratio for Synchrony × Experiment Interaction:", odds_sync_exp))
print(paste("Odds Ratio for Directed Motion × Experiment Interaction:", odds_motion_exp))
print(paste("Odds Ratio for Three-Way Interaction:", odds_sync_motion_exp))

print(paste("Cohen's d for Experiment Effect:", cohen_d_experiment))
print(paste("Cohen's d for Synchrony × Experiment Interaction:", cohen_d_sync_exp))
print(paste("Cohen's d for Directed Motion × Experiment Interaction:", cohen_d_motion_exp))
print(paste("Cohen's d for Three-Way Interaction:", cohen_d_sync_motion_exp))

print(paste("Cliff's Delta for Experiment Effect:", cliffs_delta_experiment))
print(paste("Cliff's Delta for Synchrony × Experiment Interaction:", cliffs_delta_sync_exp))
print(paste("Cliff's Delta for Directed Motion × Experiment Interaction:", cliffs_delta_motion_exp))
print(paste("Cliff's Delta for Three-Way Interaction:", cliffs_delta_sync_motion_exp))
